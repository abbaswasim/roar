// Roar Source Code
// Wasim Abbas
// http://www.waZim.com
// Copyright (c) 2021
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the 'Software'),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the Software
// is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// Version: 1.0.0

#pragma once

#include "resources/rorprojectroot.hpp"
#include "utilities.hpp"
#include <filesystem>

#cmakedefine tests_root_dir "${tests_root_dir}"

void setup_project_root()
{
	// const auto copy_options = std::filesystem::copy_options::update_existing |
	//						  std::filesystem::copy_options::recursive |
	//						  std::filesystem::copy_options::copy_symlinks;

	std::filesystem::path root_dir_path{tests_root_dir};
	std::filesystem::path destination{ror::get_project_root("roar_test_project").path() / "assets"};

	auto assets = root_dir_path / "assets";

	// get_default_project_root returns absolute path to "roar_project"
	ror::log_info("Creating symlink to assets folder from {} to {}", assets.c_str(), destination.c_str());
	// std::filesystem::copy(assets, destination, copy_options);
	// std::filesystem::create_symlink(assets, destination, copy_options);
	// Lets create a symlink to the tests/assets folder
	if (!std::filesystem::exists(destination))
		fs::create_directory_symlink(assets, destination);
}
