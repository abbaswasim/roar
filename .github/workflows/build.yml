name: Build Roar

on: [push]

jobs:
  build_macos:
    name: "${{ matrix.build_type }} build MacOS using ${{ matrix.compiler.compiler }}"
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        compiler:
          - { compiler: GNU,  CC: gcc, CXX: g++}
          - { compiler: LLVM, CC: clang, CXX: clang++}
    env:
      NUMCPUS: -j4
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Investigate runner MacOS ${{ matrix.build_type }} for ${{ matrix.compiler.compiler }}
        run: |
          cd tests/cmake_tests && cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} && VERBOSE=1 cmake --build build --config ${{ matrix.build_type }} -- -j1

  build_linux:
    name: "${{ matrix.build_type }} build MacOS using ${{ matrix.compiler.compiler }}"
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        compiler:
          - { compiler: GNU,  CC: gcc-10, CXX: g++-10}
          - { compiler: LLVM, CC: clang-12, CXX: clang++-12}
    env:
      NUMCPUS: -j4
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Investigate runner MacOS ${{ matrix.build_type }} for ${{ matrix.compiler.compiler }}
        run: |
          cd tests/cmake_tests && cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} && VERBOSE=1 cmake --build build --config ${{ matrix.build_type }} -- -j1