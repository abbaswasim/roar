name: Build Roar

on: [push]

jobs:
  build_macos:
    name: "${{ matrix.build_type }} build MacOS"
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        compiler:
          - { compiler: GNU,  CC: gcc-11, CXX: g++-11}
          - { compiler: LLVM, CC: clang-13, CXX: clang++-13}
    env:
      NUMCPUS: -j4
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Investigate runner MacOS ${{ matrix.build_type }} for ${{ matrix.compiler.compiler }}
        run: |
          which clang
          which clang++
          which gcc
          which g++
          ls -als /usr/bin/clang*
          ls -als /usr/bin/gcc*
          ls -als /usr/bin/g++*

  build_linux:
    name: Investigate runner Linux ${{ matrix.build_type }} for ${{ matrix.compiler.compiler }}
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        compiler:
          - { compiler: GNU,  CC: gcc-10.3, CXX: g++-10.3}
          - { compiler: LLVM, CC: clang-12, CXX: clang++-12}
    env:
      NUMCPUS: -j4
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Investigate runner MacOS ${{ matrix.build_type }} for ${{ matrix.compiler.compiler }}
        run: |
          which clang
          which clang++
          which gcc
          which g++
          ls -als /usr/bin/clang*
          ls -als /usr/bin/gcc*
          ls -als /usr/bin/g++*